<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.i9.lock.platform.dao.mapper.ErrorLogMapper">
  <resultMap id="BaseResultMap" type="org.i9.lock.platform.model.ErrorLog">
    <result column="lockId" jdbcType="INTEGER" property="lockId" />
    <result column="orderNumber" jdbcType="INTEGER" property="orderNumber" />
    <result column="iferror" jdbcType="INTEGER" property="iferror" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    lockId, orderNumber, iferror
  </sql>
  <select id="selectByExample" parameterType="org.i9.lock.platform.model.ErrorLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_error_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.i9.lock.platform.model.ErrorLogExample">
    delete from t_error_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.i9.lock.platform.model.ErrorLog">
    insert into t_error_log (lockId, orderNumber, iferror
      )
    values (#{lockId,jdbcType=INTEGER}, #{orderNumber,jdbcType=INTEGER}, #{iferror,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.i9.lock.platform.model.ErrorLog">
    insert into t_error_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lockId != null">
        lockId,
      </if>
      <if test="orderNumber != null">
        orderNumber,
      </if>
      <if test="iferror != null">
        iferror,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lockId != null">
        #{lockId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="iferror != null">
        #{iferror,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.i9.lock.platform.model.ErrorLogExample" resultType="java.lang.Long">
    select count(*) from t_error_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_error_log
    <set>
      <if test="record.lockId != null">
        lockId = #{record.lockId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        orderNumber = #{record.orderNumber,jdbcType=INTEGER},
      </if>
      <if test="record.iferror != null">
        iferror = #{record.iferror,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_error_log
    set lockId = #{record.lockId,jdbcType=INTEGER},
      orderNumber = #{record.orderNumber,jdbcType=INTEGER},
      iferror = #{record.iferror,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="selectErrorlogBylockIdAndOrderNumber" resultType="org.i9.lock.platform.model.ErrorLog">
  	select * from t_error_log where lockId = #{lockId} AND orderNumber = #{orderNumber}
  </select>
  
  <delete id="deleteErrorlogBylockIdAndOrderNumber">
  	delete from t_error_log where lockId = #{lockId} AND orderNumber = #{orderNumber}
  </delete>
  
  <update id="updateErrorlog">
    update t_error_log
    set 
    iferror = #{example.iferror,jdbcType=INTEGER}
    where lockId = #{example.lockId} AND orderNumber = #{example.orderNumber}
  </update>
  <select id="selectCountBylockIdAndOrderNumber" resultType="int">
  select count(*) from t_error_log where lockId = #{lockId} AND orderNumber = #{orderNumber}
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.i9.lock.platform.dao.mapper.LockKeyMapper" >
  <resultMap id="BaseResultMap" type="org.i9.lock.platform.model.LockKey" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="lockId" property="lockId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="hirerPhone" property="hirerPhone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="hireType" property="hireType" jdbcType="TINYINT" />
    <result column="hirePrice" property="hirePrice" jdbcType="DECIMAL" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="orderNumber" jdbcType="INTEGER" property="orderNumber" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="receiveFlag" jdbcType="TINYINT" property="receiveFlag" />
    <result column="receiveTime" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="eleNumber" jdbcType="DOUBLE" property="eleNumber" />
    <result column="gasNumber" jdbcType="DOUBLE" property="gasNumber" />
    <result column="waterNumber" jdbcType="DOUBLE" property="waterNumber" />
  </resultMap>
  <resultMap type="org.i9.lock.platform.model.LockKey" id="DetailResultMap" extends="BaseResultMap">
    <association property="user" column="userId" javaType="org.i9.lock.platform.model.User" select="org.i9.lock.platform.dao.mapper.UserMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, lockId, name, hirerPhone, password, hireType, hirePrice, startTime, endTime, type, 
    orderNumber, userId, receiveFlag, receiveTime, createTime, eleNumber, gasNumber, waterNumber
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.i9.lock.platform.model.LockKeyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lock_key
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_lock_key
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_lock_key
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.i9.lock.platform.model.LockKeyExample" >
    delete from t_lock_key
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.i9.lock.platform.model.LockKey" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_lock_key (lockId, name,hirerPhone, password, 
      hireType, hirePrice, startTime, 
      endTime, type, orderNumber, 
      userId, receiveFlag, receiveTime, 
      createTime)
    values (#{lockId,jdbcType=BIGINT}, #{hirerPhone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{hireType,jdbcType=TINYINT}, #{hirePrice,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{orderNumber,jdbcType=INTEGER}, 
      #{userId,jdbcType=BIGINT}, #{receiveFlag,jdbcType=TINYINT}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.i9.lock.platform.model.LockKey" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_lock_key
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lockId != null" >
        lockId,
      </if>
       <if test="name != null and name != ''" >
        name,
      </if>
      <if test="hirerPhone != null and hirerPhone != ''" >
        hirerPhone,
      </if>
      <if test="password != null and password != ''" >
        password,
      </if>
      <if test="hireType != null" >
        hireType,
      </if>
      <if test="hirePrice != null" >
        hirePrice,
      </if>
      <if test="startTime != null" >
        startTime,
      </if>
      <if test="endTime != null" >
        endTime,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="orderNumber != null">
        orderNumber,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="receiveFlag != null">
        receiveFlag,
      </if>
      <if test="receiveTime != null">
        receiveTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
       <if test="eleNumber != null">
        eleNumber,
      </if>
       <if test="gasNumber != null">
        gasNumber,
      </if>
       <if test="waterNumber != null">
        waterNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lockId != null" >
        #{lockId,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="hirerPhone != null and hirerPhone != ''" >
        #{hirerPhone,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="hireType != null" >
        #{hireType,jdbcType=TINYINT},
      </if>
      <if test="hirePrice != null" >
        #{hirePrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
       <if test="receiveFlag != null">
        #{receiveFlag,jdbcType=TINYINT},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eleNumber != null">
        #{eleNumber,jdbcType=DOUBLE},
      </if>
      <if test="gasNumber != null">
        #{gasNumber,jdbcType=DOUBLE},
      </if>
      <if test="waterNumber != null">
        #{waterNumber,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.i9.lock.platform.model.LockKeyExample" resultType="java.lang.Integer" >
    select count(*) from t_lock_key
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_lock_key
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lockId != null" >
        lockId = #{record.lockId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null and record.name != ''" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.hirerPhone != null and record.hirerPhone != ''" >
        hirerPhone = #{record.hirerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null and record.password != ''" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.hireType != null" >
        hireType = #{record.hireType,jdbcType=TINYINT},
      </if>
      <if test="record.hirePrice != null" >
        hirePrice = #{record.hirePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null" >
        startTime = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        endTime = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.orderNumber != null">
        orderNumber = #{record.orderNumber,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.receiveFlag != null">
        receiveFlag = #{record.receiveFlag,jdbcType=TINYINT},
      </if>
      <if test="record.receiveTime != null">
        receiveTime = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
     update t_lock_key
    set id = #{record.id,jdbcType=INTEGER},
      lockId = #{record.lockId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      hirerPhone = #{record.hirerPhone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      hireType = #{record.hireType,jdbcType=TINYINT},
      hirePrice = #{record.hirePrice,jdbcType=DECIMAL},
      startTime = #{record.startTime,jdbcType=TIMESTAMP},
      endTime = #{record.endTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=TINYINT},
      orderNumber = #{record.orderNumber,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=BIGINT},
      receiveFlag = #{record.receiveFlag,jdbcType=TINYINT},
      receiveTime = #{record.receiveTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateLockKeyByTwoId" parameterType="org.i9.lock.platform.model.LockKey" >
    update t_lock_key
    <set >
      <if test="hirerPhone != null and hirerPhone != ''" >
        hirerPhone = #{hirerPhone,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="hireType != null" >
        hireType = #{hireType,jdbcType=TINYINT},
      </if>
      <if test="hirePrice != null" >
        hirePrice = #{hirePrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="orderNumber != null">
        orderNumber = #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="receiveFlag != null">
        receiveFlag = #{receiveFlag,jdbcType=TINYINT},
      </if>
      <if test="receiveTime != null">
        receiveTime = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userId = #{userId} and lockId = #{lockId}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.i9.lock.platform.model.LockKey" >
    update t_lock_key
    <set >
      <if test="lockId != null" >
        lockId = #{lockId,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="hirerPhone != null and hirerPhone != ''" >
        hirerPhone = #{hirerPhone,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="hireType != null" >
        hireType = #{hireType,jdbcType=TINYINT},
      </if>
      <if test="hirePrice != null" >
        hirePrice = #{hirePrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="orderNumber != null">
        orderNumber = #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="receiveFlag != null">
        receiveFlag = #{receiveFlag,jdbcType=TINYINT},
      </if>
      <if test="receiveTime != null">
        receiveTime = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eleNumber != null">
        eleNumber = #{eleNumber,jdbcType=DOUBLE},
      </if>
      <if test="gasNumber != null">
        gasNumber = #{gasNumber,jdbcType=DOUBLE},
      </if>
      <if test="waterNumber != null">
        waterNumber = #{waterNumber,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.i9.lock.platform.model.LockKey" >
     update t_lock_key
    set lockId = #{lockId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      hirerPhone = #{hirerPhone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      hireType = #{hireType,jdbcType=TINYINT},
      hirePrice = #{hirePrice,jdbcType=DECIMAL},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      orderNumber = #{orderNumber,jdbcType=INTEGER},
      userId = #{userId,jdbcType=BIGINT},
      receiveFlag = #{receiveFlag,jdbcType=TINYINT},
      receiveTime = #{receiveTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectExistOrderNumber" parameterType="long" resultType="int">
    select orderNumber from t_lock_key where lockId = #{lockId}
  </select>
  <select id="selectLockKeyByLockIdAndUserId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_lock_key
    where lockId = #{lockId} and userId = #{userId}
  </select>
  <select id="selectByLimitPage" resultMap="DetailResultMap">
    select <include refid="Base_Column_List" /> from t_lock_key
    <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null and example.orderByClause != ''">
        order by ${example.orderByClause}
    </if>
    limit #{offset},#{limit}
  </select>
  <select id="getLockKeyByLockId" parameterType="long" resultMap="DetailResultMap">
     select <include refid="Base_Column_List" />
    from t_lock_key
    where lockId = #{lockId}
  </select>
  <delete id="deleteAll" parameterType="long">
    delete from t_lock_key where lockId  = #{lockId}
  </delete>
</mapper>
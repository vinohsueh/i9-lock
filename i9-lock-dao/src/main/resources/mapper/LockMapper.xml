<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.i9.lock.platform.dao.mapper.LockMapper" >
  <resultMap id="BaseResultMap" type="org.i9.lock.platform.model.Lock" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="keyAdmin" jdbcType="BIGINT" property="keyAdmin" />
    <result column="effective" jdbcType="TINYINT" property="effective" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="battery" property="battery" jdbcType="TINYINT" />
    <result column="eleNumber" jdbcType="DOUBLE" property="eleNumber" />
    <result column="elePrice" jdbcType="DOUBLE" property="elePrice" />
    <result column="gasNumber" jdbcType="DOUBLE" property="gasNumber" />
    <result column="gasPrice" jdbcType="DOUBLE" property="gasPrice" />
    <result column="waterNumber" jdbcType="DOUBLE" property="waterNumber" />
    <result column="waterPrice" jdbcType="DOUBLE" property="waterPrice" />
    <result column="safeMode" jdbcType="TINYINT" property="safeMode" />
    <result column="ifShared" jdbcType="TINYINT" property="ifShared" />
    <result column="alertMinute" jdbcType="INTEGER" property="alertMinute" />
    <result column="keyUser" jdbcType="BIGINT" property="keyUser" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="keyNumber" jdbcType="BIGINT" property="keyNumber" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="example.userId != null">
            and userId = #{example.userId} 
        </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
     id, keyAdmin, effective, userId, name, battery, eleNumber, elePrice, gasNumber, gasPrice, 
    waterNumber, waterPrice, safeMode, ifShared, alertMinute, keyUser, createTime, keyNumber
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.i9.lock.platform.model.LockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_lock
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_lock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.i9.lock.platform.model.LockExample" >
    delete from t_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.i9.lock.platform.model.Lock" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_lock (keyAdmin, effective, userId, 
      name, battery, eleNumber, 
      elePrice, gasNumber, gasPrice, 
      waterNumber, waterPrice, safeMode, 
      ifShared, alertMinute, keyUser, 
      createTime, keyNumber)
    values (#{keyAdmin,jdbcType=BIGINT}, #{effective,jdbcType=TINYINT}, #{userId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{battery,jdbcType=TINYINT}, #{eleNumber,jdbcType=DOUBLE}, 
      #{elePrice,jdbcType=DOUBLE}, #{gasNumber,jdbcType=DOUBLE}, #{gasPrice,jdbcType=DOUBLE}, 
      #{waterNumber,jdbcType=DOUBLE}, #{waterPrice,jdbcType=DOUBLE}, #{safeMode,jdbcType=TINYINT}, 
      #{ifShared,jdbcType=TINYINT}, #{alertMinute,jdbcType=INTEGER}, #{keyUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{keyNumber,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.i9.lock.platform.model.Lock" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_lock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="keyAdmin != null">
        keyAdmin,
      </if>
      <if test="effective != null">
        effective,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="name != null and name != ''" >
        name,
      </if>
      <if test="battery != null" >
        battery,
      </if>
      <if test="eleNumber != null">
        eleNumber,
      </if>
      <if test="elePrice != null">
        elePrice,
      </if>
      <if test="gasNumber != null">
        gasNumber,
      </if>
      <if test="gasPrice != null">
        gasPrice,
      </if>
      <if test="waterNumber != null">
        waterNumber,
      </if>
      <if test="waterPrice != null">
        waterPrice,
      </if>
      <if test="safeMode != null">
        safeMode,
      </if>
      <if test="ifShared != null">
        ifShared,
      </if>
      <if test="alertMinute != null">
        alertMinute,
      </if>
      <if test="keyUser != null">
        keyUser,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="keyNumber != null">
        keyNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="keyAdmin != null">
        #{keyAdmin,jdbcType=BIGINT},
      </if>
      <if test="effective != null">
        #{effective,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="battery != null" >
        #{battery,jdbcType=TINYINT},
      </if>
       <if test="eleNumber != null">
        #{eleNumber,jdbcType=DOUBLE},
      </if>
      <if test="elePrice != null">
        #{elePrice,jdbcType=DOUBLE},
      </if>
      <if test="gasNumber != null">
        #{gasNumber,jdbcType=DOUBLE},
      </if>
      <if test="gasPrice != null">
        #{gasPrice,jdbcType=DOUBLE},
      </if>
      <if test="waterNumber != null">
        #{waterNumber,jdbcType=DOUBLE},
      </if>
      <if test="waterPrice != null">
        #{waterPrice,jdbcType=DOUBLE},
      </if>
      <if test="safeMode != null">
        #{safeMode,jdbcType=TINYINT},
      </if>
      <if test="ifShared != null">
        #{ifShared,jdbcType=TINYINT},
      </if>
      <if test="alertMinute != null">
        #{alertMinute,jdbcType=INTEGER},
      </if>
      <if test="keyUser != null">
        #{keyUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="keyNumber != null">
        #{keyNumber,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.i9.lock.platform.model.LockExample" resultType="java.lang.Integer" >
    select count(*) from t_lock
    <if test="_parameter != null" >
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_lock
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
       <if test="record.keyAdmin != null">
        keyAdmin = #{record.keyAdmin,jdbcType=BIGINT},
      </if>
      <if test="record.effective != null">
        effective = #{record.effective,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null and record.name != ''" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.battery != null" >
        battery = #{record.battery,jdbcType=TINYINT},
      </if>
       <if test="record.eleNumber != null">
        eleNumber = #{record.eleNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.elePrice != null">
        elePrice = #{record.elePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.gasNumber != null">
        gasNumber = #{record.gasNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.gasPrice != null">
        gasPrice = #{record.gasPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.waterNumber != null">
        waterNumber = #{record.waterNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.waterPrice != null">
        waterPrice = #{record.waterPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.safeMode != null">
        safeMode = #{record.safeMode,jdbcType=TINYINT},
      </if>
      <if test="record.ifShared != null">
        ifShared = #{record.ifShared,jdbcType=TINYINT},
      </if>
      <if test="record.alertMinute != null">
        alertMinute = #{record.alertMinute,jdbcType=INTEGER},
      </if>
      <if test="record.keyUser != null">
        keyUser = #{record.keyUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.keyNumber != null">
        keyNumber = #{record.keyNumber,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
     update t_lock
    set id = #{record.id,jdbcType=BIGINT},
      keyAdmin = #{record.keyAdmin,jdbcType=BIGINT},
      effective = #{record.effective,jdbcType=TINYINT},
      userId = #{record.userId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      battery = #{record.battery,jdbcType=TINYINT},
      eleNumber = #{record.eleNumber,jdbcType=DOUBLE},
      elePrice = #{record.elePrice,jdbcType=DOUBLE},
      gasNumber = #{record.gasNumber,jdbcType=DOUBLE},
      gasPrice = #{record.gasPrice,jdbcType=DOUBLE},
      waterNumber = #{record.waterNumber,jdbcType=DOUBLE},
      waterPrice = #{record.waterPrice,jdbcType=DOUBLE},
      safeMode = #{record.safeMode,jdbcType=TINYINT},
      ifShared = #{record.ifShared,jdbcType=TINYINT},
      alertMinute = #{record.alertMinute,jdbcType=INTEGER},
      keyUser = #{record.keyUser,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      keyNumber = #{record.keyNumber,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.i9.lock.platform.model.Lock" >
    update t_lock
    <set >
      <if test="keyAdmin != null">
        keyAdmin = #{keyAdmin,jdbcType=BIGINT},
      </if>
      <if test="effective != null">
        effective = #{effective,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="battery != null" >
        battery = #{battery,jdbcType=TINYINT},
      </if>
       <if test="eleNumber != null">
        eleNumber = #{eleNumber,jdbcType=DOUBLE},
      </if>
      <if test="elePrice != null">
        elePrice = #{elePrice,jdbcType=DOUBLE},
      </if>
      <if test="gasNumber != null">
        gasNumber = #{gasNumber,jdbcType=DOUBLE},
      </if>
      <if test="gasPrice != null">
        gasPrice = #{gasPrice,jdbcType=DOUBLE},
      </if>
      <if test="waterNumber != null">
        waterNumber = #{waterNumber,jdbcType=DOUBLE},
      </if>
      <if test="waterPrice != null">
        waterPrice = #{waterPrice,jdbcType=DOUBLE},
      </if>
      <if test="safeMode != null">
        safeMode = #{safeMode,jdbcType=TINYINT},
      </if>
      <if test="ifShared != null">
        ifShared = #{ifShared,jdbcType=TINYINT},
      </if>
      <if test="alertMinute != null">
        alertMinute = #{alertMinute,jdbcType=INTEGER},
      </if>
      <if test="keyUser != null">
        keyUser = #{keyUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="keyNumber != null">
        keyNumber = #{keyNumber,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.i9.lock.platform.model.Lock" >
     update t_lock
    set keyAdmin = #{keyAdmin,jdbcType=BIGINT},
      effective = #{effective,jdbcType=TINYINT},
      userId = #{userId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      battery = #{battery,jdbcType=TINYINT},
      eleNumber = #{eleNumber,jdbcType=DOUBLE},
      elePrice = #{elePrice,jdbcType=DOUBLE},
      gasNumber = #{gasNumber,jdbcType=DOUBLE},
      gasPrice = #{gasPrice,jdbcType=DOUBLE},
      waterNumber = #{waterNumber,jdbcType=DOUBLE},
      waterPrice = #{waterPrice,jdbcType=DOUBLE},
      safeMode = #{safeMode,jdbcType=TINYINT},
      ifShared = #{ifShared,jdbcType=TINYINT},
      alertMinute = #{alertMinute,jdbcType=INTEGER},
      keyUser = #{keyUser,jdbcType=BIGINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      keyNumber = #{keyNumber,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from t_lock
    <if test="_parameter != null">
        <include refid="Query_By_Dto_Where_Clause" />
    </if>
    <if test="example.orderByClause != null and example.orderByClause != ''">
        order by ${example.orderByClause}
    </if>
    limit #{offset},#{limit}
  </select>
  
  <update id="releaseLock" parameterType="long">
    update t_lock set keyAdmin = null,userId = null where id = #{id}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.i9.lock.platform.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="org.i9.lock.platform.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="familyPhone" jdbcType="VARCHAR" property="familyPhone" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifyFamilyPhoneTime" jdbcType="TIMESTAMP" property="modifyFamilyPhoneTime" />
    <result column="userFlag" jdbcType="SMALLINT" property="userFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="example.username != null and example.username != ''">
            or username like CONCAT('%',CONCAT('${example.username}','%')) 
        </if>
        <if test="example.phone != null and example.phone != ''">
            or phone like CONCAT('%',CONCAT('${example.phone}','%')) 
        </if>
        <if test="example.familyPhone != null and example.familyPhone != ''">
            or familyPhone like CONCAT('%',CONCAT('${example.familyPhone}','%'))
        </if>
    </trim>
  </sql>
  <sql id="Base_Column_List">
     id, username, name, password, phone, familyPhone, createTime, modifyFamilyPhoneTime, 
    userFlag
  </sql>
  <select id="selectByExample" parameterType="org.i9.lock.platform.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List">
    delete from t_user
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
     #{item}
    </foreach>
  </delete>
  <delete id="deleteByExample" parameterType="org.i9.lock.platform.model.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="selectUsernameById" parameterType="int" resultType="string">
    select username from t_user where id = #{id}
  </select>
  <insert id="insert" parameterType="org.i9.lock.platform.model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
     insert into t_user (username, name, password, 
      phone, familyPhone, createTime, 
      modifyFamilyPhoneTime, userFlag)
    values (#{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{familyPhone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyFamilyPhoneTime,jdbcType=TIMESTAMP}, #{userFlag,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="org.i9.lock.platform.model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        username,
      </if>
       <if test="name != null and name != ''">
        name,
      </if>
      <if test="password != null and password != ''">
        password,
      </if>
      <if test="phone != null and phone != ''">
        phone,
      </if>
      <if test="familyPhone != null and familyPhone != ''">
        familyPhone,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="modifyFamilyPhoneTime != null">
        modifyFamilyPhoneTime,
      </if>
      <if test="userFlag != null">
        userFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
       <if test="username != null and username != ''">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="familyPhone != null and familyPhone != ''">
        #{familyPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyFamilyPhoneTime != null">
        #{modifyFamilyPhoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userFlag != null">
        #{userFlag,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.i9.lock.platform.model.UserExample" resultType="java.lang.Integer">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null and record.username != ''">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null and record.name != ''">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null and record.password != ''">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null and record.phone != ''">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.familyPhone != null and record.familyPhone != ''">
        familyPhone = #{record.familyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyFamilyPhoneTime != null">
        modifyFamilyPhoneTime = #{record.modifyFamilyPhoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userFlag != null">
        userFlag = #{record.userFlag,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      familyPhone = #{record.familyPhone,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      modifyFamilyPhoneTime = #{record.modifyFamilyPhoneTime,jdbcType=TIMESTAMP},
      userFlag = #{record.userFlag,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.i9.lock.platform.model.User">
    update t_user
    <set>
      <if test="username != null and username != ''">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name != ''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="familyPhone != null and familyPhone != ''">
        familyPhone = #{familyPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyFamilyPhoneTime != null">
        modifyFamilyPhoneTime = #{modifyFamilyPhoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userFlag != null">
        userFlag = #{userFlag,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.i9.lock.platform.model.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      familyPhone = #{familyPhone,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      modifyFamilyPhoneTime = #{modifyFamilyPhoneTime,jdbcType=TIMESTAMP},
      userFlag = #{userFlag,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from t_user
    <if test="_parameter != null">
        <include refid="Query_By_Dto_Where_Clause" />
    </if>
    <if test="example.orderByClause != null and example.orderByClause != ''">
    order by ${example.orderByClause}
    </if>
    limit #{offset},#{limit}
  </select>
  <select id="selectByPhoneAndName" resultMap="org.i9.lock.platform.model.User">
    select * from t_user where phone = #{phone} and name = #{name}
  </select>
</mapper>